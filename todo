Backlog
--------
has_one :through
join with a TupleClass should use its #set
project with a TupleClass should use its #set
proxy missing methods from TupleClasses to their #set
Release from should blow up if the object is not a retainer
cleanup PrimitiveTuple#[] specs
Instantiating an AttributesProjection with an operand that is composite raises an exception because we rely on #tuple_class
Commonize PrimitiveTuple & ProjectedTuple as much as possible
Sets should not have to be retained to support insert
When a set is retained, it should retain its tuples, just like any other relation
Decide what to do when fetching an object out of the database that is already in the cache (should we update the cached object?)
Nuke unretained objects from the cache periodically using an LRU strategy
Introduce directionality on order_by_attributes
AttributesProjection#fetch_sql and #merge should delegate to #operand

Icebox
--------

Need to add specs for #initial_read on all Relation classes


Potentially rip out support for referencing hash_representation on unretained Topics... OR
  do transform in PrimitiveField and not the [] reader, which means we need to address the following:
  PrimitiveTuple#attributes calls the transform block on field values. Do we want to do this on persist? If not, add PrimitiveTuple#persistent_attributes

Give ProjectedTuple its own private values to avoid problems of in-place mutation of its Fields' values.